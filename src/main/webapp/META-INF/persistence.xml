<?xml version="1.0" encoding="UTF-8"?>
<persistence version="1.0"
	xmlns:persistence="http://java.sun.com/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence persistence_1_0.xsd ">
	<!-- Name属性用于定义持久化单元的名字 (name必选,空值也合法); transaction-type 指定事务类型(可选) -->
	<persistence-unit name="mfd" transaction-type="JTA">
		<!-- 描述信息.(可选) -->
		<description>移动航显</description>
		<!-- javax.persistence.PersistenceProvider接口的一个实现类，通常在同时使用多个JPA实现时才需要(可选) -->
		<provider>org.hibernate.ejb.HibernatePersistence</provider>

		<!-- Jta-data-source和 non-jta-data-source用于分别指定持久化提供商使用的JTA和/或non-JTA数据源的全局JNDI名称(可选) -->
		<jta-data-source>java:/MySqlDS</jta-data-source>
		<non-jta-data-source></non-jta-data-source>

		<!-- 声明orm.xml所在位置.(可选) -->
		<!-- <mapping-file></mapping-file> -->

		<!-- 以包含persistence.xml的jar文件为基准的相对路径,添加额外的jar文件.(可选) -->
		<!-- <jar-file></jar-file> -->

		<!-- 显式列出实体类,在Java SE 环境中应该显式列出.(可选) -->
		<!-- <class></class> -->

		<!-- 声明是否扫描jar文件中标注了@Enity类加入到上下文.若不扫描,则如下:(可选) -->
		<!-- <exclude-unlisted-classes /> -->

		<!-- 厂商专有属性(可选) -->
		<properties>
			<property name="hibernate.archive.autodetection" value="class, hbm"></property>
			<!--配置数据库的驱动程序，Hibernate在连接数据库时，需要用到数据库的驱动程序 -->
			<property name="hibernate.connection.driver_class">com.mysql.jdbc.Driver</property>
			<!--设置数据库的连接url:jdbc:mysql://localhost/hibernate,其中localhost表示mysql服务器名称，此处为本机， 
				hibernate是数据库名 -->
			<property name="hibernate.connection.url">jdbc:mysql://localhost/hibernate</property>
			<!--连接数据库是用户名 -->
			<property name="hibernate.connection.username">lqs</property>
			<!--连接数据库是密码 -->
			<property name="hibernate.connection.password">1213</property>
			<!--数据库连接池的大小 -->
			<property name="hibernate.connection.pool.size">20</property>
			<!--是否在后台显示Hibernate用到的SQL语句，开发时设置为true，便于差错，程序运行时可以在Eclipse的控制台显示Hibernate的执行Sql语句。项目部署后可以设置为false，提高运行效率 -->
			<property name="hibernate.show_sql">true</property>
			<!-- 是否将输出的sql语句格式化 -->
			<property name="format_sql">true</property>
			<!--jdbc.fetch_size是指Hibernate每次从数据库中取出并放到JDBC的Statement中的记录条数。Fetch Size设的越大，读数据库的次数越少，速度越快，Fetch 
				Size越小，读数据库的次数越多，速度越慢 -->
			<property name="jdbc.fetch_size">100</property>
			<!--jdbc.batch_size是指Hibernate批量插入,删除和更新时每次操作的记录数。Batch Size越大，批量操作的向数据库发送Sql的次数越少，速度就越快，同样耗用内存就越大 -->
			<property name="jdbc.batch_size">50</property>
			<!--jdbc.use_scrollable_resultset是否允许Hibernate用JDBC的可滚动的结果集。对分页的结果集。对分页时的设置非常有帮助 -->
			<property name="jdbc.use_scrollable_resultset">false</property>
			<!--connection.useUnicode连接数据库时是否使用Unicode编码 -->
			<property name="Connection.useUnicode">true</property>
			<!--connection.characterEncoding连接数据库时数据的传输字符集编码方式，最好设置为gbk，用gb2312有的字符不全 -->
			<property name="connection.characterEncoding">utf-8</property>
			<!--hibernate.dialect 只是Hibernate使用的数据库方言,就是要用Hibernate连接那种类型的数据库服务器。 -->
			<property name="hibernate.dialect">org.hibernate.dialect.MySQLDialect</property>
		</properties>
	</persistence-unit>
</persistence>